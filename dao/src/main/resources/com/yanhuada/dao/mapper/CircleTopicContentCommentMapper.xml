<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yanhuada.dao.mapper.CircleTopicContentCommentMapper">
  <resultMap id="BaseResultMap" type="com.yanhuada.model.CircleTopicContentComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="circle_topic_content_id" jdbcType="BIGINT" property="circleTopicContentId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_nickname" jdbcType="VARCHAR" property="userNickname" />
    <result column="user_avatar" jdbcType="VARCHAR" property="userAvatar" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="like_num" jdbcType="INTEGER" property="likeNum" />
    <result column="reply_num" jdbcType="INTEGER" property="replyNum" />
    <result column="if_delete" jdbcType="BIT" property="ifDelete" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="version" jdbcType="BIGINT" property="version" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, circle_topic_content_id, user_id, user_nickname, user_avatar, content, like_num,
    reply_num, if_delete, created_at, updated_at, version
  </sql>
  <select id="selectByExample" parameterType="com.yanhuada.model.CircleTopicContentCommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from circle_topic_content_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from circle_topic_content_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from circle_topic_content_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.yanhuada.model.CircleTopicContentCommentExample">
    delete from circle_topic_content_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yanhuada.model.CircleTopicContentComment">
    insert into circle_topic_content_comment (id, circle_topic_content_id, user_id,
      user_nickname, user_avatar, content,
      like_num, reply_num, if_delete,
      created_at, updated_at, version
      )
    values (#{id,jdbcType=BIGINT}, #{circleTopicContentId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
      #{userNickname,jdbcType=VARCHAR}, #{userAvatar,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
      #{likeNum,jdbcType=INTEGER}, #{replyNum,jdbcType=INTEGER}, #{ifDelete,jdbcType=BIT},
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{version,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.yanhuada.model.CircleTopicContentComment">
    insert into circle_topic_content_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="circleTopicContentId != null">
        circle_topic_content_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userNickname != null">
        user_nickname,
      </if>
      <if test="userAvatar != null">
        user_avatar,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="likeNum != null">
        like_num,
      </if>
      <if test="replyNum != null">
        reply_num,
      </if>
      <if test="ifDelete != null">
        if_delete,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="circleTopicContentId != null">
        #{circleTopicContentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNickname != null">
        #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null">
        #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="ifDelete != null">
        #{ifDelete,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        #{version,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yanhuada.model.CircleTopicContentCommentExample" resultType="java.lang.Long">
    select count(*) from circle_topic_content_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update circle_topic_content_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.circleTopicContentId != null">
        circle_topic_content_id = #{record.circleTopicContentId,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.userNickname != null">
        user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      </if>
      <if test="record.userAvatar != null">
        user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.likeNum != null">
        like_num = #{record.likeNum,jdbcType=INTEGER},
      </if>
      <if test="record.replyNum != null">
        reply_num = #{record.replyNum,jdbcType=INTEGER},
      </if>
      <if test="record.ifDelete != null">
        if_delete = #{record.ifDelete,jdbcType=BIT},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.version != null">
        version = #{record.version,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update circle_topic_content_comment
    set id = #{record.id,jdbcType=BIGINT},
      circle_topic_content_id = #{record.circleTopicContentId,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      user_nickname = #{record.userNickname,jdbcType=VARCHAR},
      user_avatar = #{record.userAvatar,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      like_num = #{record.likeNum,jdbcType=INTEGER},
      reply_num = #{record.replyNum,jdbcType=INTEGER},
      if_delete = #{record.ifDelete,jdbcType=BIT},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      version = #{record.version,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yanhuada.model.CircleTopicContentComment">
    update circle_topic_content_comment
    <set>
      <if test="circleTopicContentId != null">
        circle_topic_content_id = #{circleTopicContentId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="userNickname != null">
        user_nickname = #{userNickname,jdbcType=VARCHAR},
      </if>
      <if test="userAvatar != null">
        user_avatar = #{userAvatar,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="likeNum != null">
        like_num = #{likeNum,jdbcType=INTEGER},
      </if>
      <if test="replyNum != null">
        reply_num = #{replyNum,jdbcType=INTEGER},
      </if>
      <if test="ifDelete != null">
        if_delete = #{ifDelete,jdbcType=BIT},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yanhuada.model.CircleTopicContentComment">
    update circle_topic_content_comment
    set circle_topic_content_id = #{circleTopicContentId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      user_nickname = #{userNickname,jdbcType=VARCHAR},
      user_avatar = #{userAvatar,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      like_num = #{likeNum,jdbcType=INTEGER},
      reply_num = #{replyNum,jdbcType=INTEGER},
      if_delete = #{ifDelete,jdbcType=BIT},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      version = #{version,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
